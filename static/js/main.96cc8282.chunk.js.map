{"version":3,"sources":["data.ts","app/tableSlice.ts","app/store.ts","app/hooks.ts","components/TableColumn.tsx","components/ui/TableRows.tsx","components/Pagination.tsx","components/ui/SearchIcon.tsx","components/ui/Search.tsx","components/ui/DateFilter.tsx","components/ui/RectangleUpIcon.tsx","components/ui/RectangleDownIcon.tsx","components/ui/DropDownListModal.tsx","components/FilterBar.tsx","components/TableHeader.tsx","components/TableComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mockData","Array","fill","id","title","description","user","creationDate","executionDate","status","repeat","flat","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","tableSlice","createSlice","initialState","data","currentPage","totalPages","search","statusFilter","startDate","endDate","reducers","setTableData","state","action","payload","setPage","setSearch","setFilter","setTotalPages","setStartDate","setEndDate","_tableSlice$actions","actions","store","configureStore","reducer","table","tableReducer","useAppDispatch","useDispatch","useAppSelector","useSelector","TableColumn","React","createElement","className","style","width","TableRows","tableData","map","item","height","key","Math","random","display","alignItems","overflow","concat","substring","Date","toLocaleDateString","Pagination","dispatch","handlePageChange","newPage","Fragment","fontSize","onClick","from","_","index","page","SearchIcon","viewBox","xmlns","Search","labelRef","useRef","ref","onChange","target","onFocus","current","classList","add","onBlur","remove","placeholder","DateFilter","htmlFor","RectangleUpIcon","stroke","strokeWidth","RectangleDownIcon","DropDownList","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","handleStatusFilterChange","setTimeout","prevShowModal","cursor","all","active","canceled","completed","FilterBar","gap","DropDownListModal","TableHeader","background","boxShadow","TableComponent","useEffect","_ref","_asyncToGenerator","_callee","startIndex","filterMockData","sliceFilterMockData","_context","filter","searchCondition","some","toLowerCase","includes","dateCondition","statusCondition","ceil","error","console","_x","apply","arguments","fetchTableData","maxHeight","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode","Provider"],"mappings":"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","file":"static/js/main.96cc8282.chunk.js","sourcesContent":["export interface TableItem {\n  id: number;\n  title: string;\n  description: string;\n  user: string;\n  creationDate: string;\n  executionDate: string;\n  status: string;\n}\nexport const mockData: TableItem[] = Array(10)\n  .fill([\n    {\n      id: 1,\n      title: \"Название 1\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\",\n      user: \"Иванов В. Н.\",\n      creationDate: \"2023-01-02\",\n      executionDate: \"\",\n      status: \"Активный\",\n    },\n    {\n      id: 2,\n      title: \"Название 2\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\",\n      user: \"Сидоров В. Н.\",\n      creationDate: \"2023-01-02\",\n      executionDate: \"2023-01-02\",\n      status: \"Завершенный\",\n    },\n    {\n      id: 3,\n      title: \"Название 3\",\n      description:\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod \".repeat(\n          15\n        ),\n      user: \"Гойхфис А.Л.\",\n      creationDate: \"2023-01-03\",\n      executionDate: \"2023-01-15\",\n      status: \"Отмененный\",\n    },\n  ])\n  .flat();\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppThunk } from \"./store\";\nimport { mockData, TableItem } from \"../data\";\n\ninterface TableState {\n  data: TableItem[];\n  currentPage: number;\n  totalPages: number;\n  search: string;\n  statusFilter: string;\n  startDate: string;\n  endDate: string;\n}\n\nconst initialState: TableState = {\n  data: [],\n  currentPage: 1,\n  totalPages: 1,\n  search: \"\",\n  statusFilter: \"all\",\n  startDate: \"\",\n  endDate: \"\",\n};\n\nconst tableSlice = createSlice({\n  name: \"table\",\n  initialState,\n  reducers: {\n    setTableData: (state, action: PayloadAction<TableItem[]>) => {\n      state.data = action.payload;\n    },\n    setPage: (state, action: PayloadAction<number>) => {\n      state.currentPage = action.payload;\n    },\n    setSearch: (state, action: PayloadAction<string>) => {\n      state.search = action.payload;\n    },\n    setFilter: (state, action: PayloadAction<string>) => {\n      state.statusFilter = action.payload;\n    },\n    setTotalPages: (state, action: PayloadAction<number>) => {\n      state.totalPages = action.payload;\n    },\n    setStartDate: (state, action: PayloadAction<string>) => {\n      state.startDate = action.payload;\n    },\n    setEndDate: (state, action: PayloadAction<string>) => {\n      state.endDate = action.payload;\n    },\n  },\n});\n\nexport const {\n  setTableData,\n  setPage,\n  setSearch,\n  setStartDate,\n  setEndDate,\n  setFilter,\n  setTotalPages,\n} = tableSlice.actions;\nexport const fetchTableData =\n  (\n    page: number,\n    search: string,\n    statusFilter: string,\n    startDate: string,\n    endDate: string\n  ): AppThunk =>\n  async (dispatch) => {\n    try {\n      const itemsPerPage = 8;\n      const startIndex = (page - 1) * itemsPerPage;\n      const filterMockData = mockData.filter((item) => {\n        // Условие для фильтрации по поиску\n        const searchCondition =\n          !search ||\n          Object.values(item).some(\n            (value) =>\n              typeof value === \"string\" &&\n              value.toLowerCase().includes(search.toLowerCase())\n          );\n\n        // Условие для фильтрации по дате\n        const dateCondition =\n          (!startDate || new Date(item.creationDate) >= new Date(startDate)) &&\n          (!endDate || new Date(item.executionDate) <= new Date(endDate));\n\n        // Условие для фильтрации по статусу\n        const statusMap: Record<string, string> = {\n          active: \"Активный\",\n          canceled: \"Отмененный\",\n          completed: \"Завершенный\",\n        };\n        const statusCondition =\n          statusFilter === \"all\" || item.status === statusMap[statusFilter];\n\n        return dateCondition && statusCondition && searchCondition;\n      });\n      const totalPages = Math.ceil(filterMockData.length / itemsPerPage);\n      const sliceFilterMockData = filterMockData.slice(\n        startIndex,\n        startIndex + itemsPerPage\n      );\n      dispatch(setTableData(sliceFilterMockData));\n      dispatch(setTotalPages(totalPages));\n    } catch (error) {\n      console.error(\"Error fetching table data:\", error);\n    }\n  };\nexport default tableSlice.reducer;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\nimport tableReducer from \"./tableSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    table: tableReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from \"react\";\n//  Заголовки столбцов\nconst TableColumn: React.FC = () => {\n  return (\n    <thead className=\"column\">\n      <tr>\n        <th>Название</th>\n        <th style={{ width: \"35%\" }}>Описание</th>\n        <th>Пользователь</th>\n        <th>Дата создания</th>\n        <th>Дата исполнения</th>\n        <th>Статус</th>\n      </tr>\n    </thead>\n  );\n};\nexport default TableColumn;\n","import React from \"react\";\nimport { useAppSelector } from \"../../app/hooks\";\n\n//   Данные таблицы\nconst TableRows: React.FC = () => {\n  const tableData = useAppSelector((state) => state.table.data);\n  return (\n    <tbody>\n      {tableData.map((item) => (\n        <tr\n          className=\" border  font-weight-normal \"\n          style={{\n            height: \"60px\",\n          }}\n          key={item.id + Math.random()}\n        >\n          <td>{item.title}</td>\n          <td\n            style={\n              item.description.length > 200\n                ? {\n                    display: \"flex\",\n                    height: \"60px\",\n                    alignItems: \"start\",\n                    overflow: \"scroll\",\n                  }\n                : {}\n            }\n          >\n            {item.description.length > 1000\n              ? `${item.description.substring(0, 1000)}...`\n              : item.description}\n          </td>\n          <td>{item.user}</td>\n          <td>{new Date(item.creationDate).toLocaleDateString()}</td>\n          <td>\n            {item.executionDate\n              ? new Date(item.executionDate).toLocaleDateString()\n              : \"–\"}\n          </td>\n          <td>{item.status}</td>\n        </tr>\n      ))}\n    </tbody>\n  );\n};\nexport default TableRows;\n","import React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\nimport { setPage } from \"../app/tableSlice\";\n\nconst Pagination: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentPage = useAppSelector((state) => state.table.currentPage);\n  const totalPages = useAppSelector((state) => state.table.totalPages);\n\n  const handlePageChange = (newPage: number) => {\n    dispatch(setPage(newPage));\n  };\n\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      handlePageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      handlePageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <>\n      {totalPages > 0 && (\n        <div style={{ fontSize: \"0.85rem\" }} className=\"mx-auto mt-5\">\n          <button\n            className={`button ${currentPage === 1 ? \"no-active\" : \"\"}`}\n            onClick={handlePrevPage}\n          >\n            {\"<\"}\n          </button>\n          {Array.from({ length: totalPages }, (_, index) => index + 1).map(\n            (page) => (\n              <button\n                className={`button ${currentPage === page ? \"active\" : \"\"}`}\n                key={page}\n                onClick={() => handlePageChange(page)}\n              >\n                {page}\n              </button>\n            )\n          )}\n          <button\n            className={`button ${\n              currentPage === totalPages ? \"no-active\" : \"\"\n            }`}\n            onClick={handleNextPage}\n          >\n            {\">\"}\n          </button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nconst SearchIcon: React.FC = () => {\n  return (\n    <svg\n      width=\"15\"\n      height=\"15\"\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M10.7204 9.43396H10.0429L9.80274 9.2024C10.6432 8.2247 11.1492 6.9554 11.1492 5.57461C11.1492 2.49571 8.65352 0 5.57461 0C2.49571 0 0 2.49571 0 5.57461C0 8.65352 2.49571 11.1492 5.57461 11.1492C6.9554 11.1492 8.2247 10.6432 9.2024 9.80274L9.43396 10.0429V10.7204L13.7221 15L15 13.7221L10.7204 9.43396ZM5.57461 9.43396C3.43911 9.43396 1.71527 7.71012 1.71527 5.57461C1.71527 3.43911 3.43911 1.71527 5.57461 1.71527C7.71012 1.71527 9.43396 3.43911 9.43396 5.57461C9.43396 7.71012 7.71012 9.43396 5.57461 9.43396Z\"\n        fill=\"#ACACAC\"\n      />\n    </svg>\n  );\n};\nexport default SearchIcon;\n","import React, { useRef } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\nimport { setPage, setSearch } from \"../../app/tableSlice\";\nimport SearchIcon from \"./SearchIcon\";\n\nconst Search: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const search = useAppSelector((state) => state.table.search);\n\n  const labelRef = useRef<HTMLLabelElement>(null);\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSearch(e.target.value));\n    dispatch(setPage(1)); // Переход на первую страницу при изменении поиска\n  };\n\n  const handleInputFocus = () => {\n    if (labelRef.current) {\n      labelRef.current.classList.add(\"focused\");\n    }\n  };\n\n  const handleInputBlur = () => {\n    if (labelRef.current) {\n      labelRef.current.classList.remove(\"focused\");\n    }\n  };\n\n  return (\n    <label ref={labelRef} className=\"d-flex rounded-pill  search-label\">\n      <input\n        type=\"text\"\n        value={search}\n        onChange={handleSearchChange}\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        placeholder=\"Поиск\"\n      />\n      <button className=\"search-button\">\n        <SearchIcon />\n      </button>\n    </label>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { setEndDate, setPage, setStartDate } from \"../../app/tableSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\n//  Фильтр по дате\nconst DateFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const startDate = useAppSelector((state) => state.table.startDate);\n  const endDate = useAppSelector((state) => state.table.endDate);\n\n  const handleStartDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setStartDate(e.target.value));\n    dispatch(setPage(1)); // Переход на первую страницу при изменении начальной даты\n  };\n\n  const handleEndDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setEndDate(e.target.value));\n    dispatch(setPage(1)); // Переход на первую страницу при изменении конечной даты\n  };\n\n  return (\n    <div className=\"d-flex \">\n      <label htmlFor=\"startDate\">\n        с\n        <input\n          className=\"mx-2\"\n          id=\"startDate\"\n          type=\"date\"\n          value={startDate}\n          onChange={handleStartDateChange}\n          placeholder=\"Начальная дата\"\n        />\n      </label>\n\n      <label htmlFor=\"endDate\">\n        по\n        <input\n          className=\"mx-2\"\n          id=\"endDate\"\n          type=\"date\"\n          value={endDate}\n          onChange={handleEndDateChange}\n          placeholder=\"\"\n        />\n      </label>\n    </div>\n  );\n};\nexport default DateFilter;\n","import React from \"react\";\nconst RectangleUpIcon: React.FC = () => {\n  return (\n    <svg\n      width=\"14\"\n      height=\"9\"\n      viewBox=\"0 0 14 9\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12.3135 8L6.65662 2.34315L0.999768 8\"\n        stroke=\"#ACACAC\"\n        strokeWidth=\"2\"\n      />\n    </svg>\n  );\n};\nexport default RectangleUpIcon;\n","import React from \"react\";\nconst RectangleDownIcon: React.FC = () => {\n  return (\n    <svg\n      width=\"14\"\n      height=\"9\"\n      viewBox=\"0 0 14 9\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M1 1L6.65685 6.65685L12.3137 1\"\n        stroke=\"#ACACAC\"\n        strokeWidth=\"2\"\n      />\n    </svg>\n  );\n};\nexport default RectangleDownIcon;\n","import React, { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\nimport { setFilter, setPage } from \"../../app/tableSlice\";\nimport RectangleUpIcon from \"./RectangleUpIcon\";\nimport RectangleDownIcon from \"./RectangleDownIcon\";\n\nconst DropDownList: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const statusFilter = useAppSelector((state) => state.table.statusFilter);\n  const [showModal, setShowModal] = useState(false);\n\n  const handleStatusFilterChange = (value: string) => {\n    dispatch(setFilter(value));\n    dispatch(setPage(1));\n    setTimeout(() => setShowModal(false));\n  };\n\n  const statusMap: Record<string, string> = {\n    all: \"Все\",\n    active: \"Активный\",\n    canceled: \"Отмененный\",\n    completed: \"Завершенный\",\n  };\n\n  return (\n    <>\n      <div\n        className={`drop-down-button justify-content-between \n        ${showModal ? \"focused\" : \"\"}`}\n        id=\"dropdown-container\"\n        onClick={() => {\n          setShowModal((prevShowModal) => !prevShowModal);\n        }}\n        style={{ cursor: \"pointer\", width: 164 }}\n      >\n        <span>{statusMap[statusFilter]}</span>\n        {showModal ? <RectangleUpIcon /> : <RectangleDownIcon />}\n        {showModal && (\n          <div className=\"drop-down-list\">\n            <div\n              className=\"dropdown-item\"\n              onClick={() => handleStatusFilterChange(\"all\")}\n            >\n              Все\n            </div>\n            <div\n              className=\"dropdown-item\"\n              onClick={() => handleStatusFilterChange(\"active\")}\n            >\n              Активный\n            </div>\n            <div\n              className=\"dropdown-item\"\n              onClick={() => handleStatusFilterChange(\"canceled\")}\n            >\n              Отмененный\n            </div>\n            <div\n              className=\"dropdown-item\"\n              onClick={() => handleStatusFilterChange(\"completed\")}\n            >\n              Завершенный\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default DropDownList;\n","import React from \"react\";\nimport Search from \"./ui/Search\";\nimport DateFilter from \"./ui/DateFilter\";\nimport DropDownListModal from \"./ui/DropDownListModal\";\n\nconst FilterBar: React.FC = () => {\n  return (\n    <div className=\"filter-bar d-flex my-2\" style={{ gap: 20 }}>\n      <Search />\n      <DateFilter />\n      <DropDownListModal />\n    </div>\n  );\n};\nexport default FilterBar;\n","import React from \"react\";\nimport FilterBar from \"./FilterBar\";\n\nconst TableHeader: React.FC = () => {\n  return (\n    <div>\n      <div className=\"mx-3\">\n        <h5 className=\"font-weight-bold\">ТАБЛИЦА</h5>\n        <FilterBar />\n      </div>\n      <div\n        style={{\n          height: 1,\n          background: \"#DADADA\",\n          boxShadow: \"2px 3px 6px 0px rgba(0, 0, 0, 0.16)\",\n        }}\n      ></div>\n    </div>\n  );\n};\nexport default TableHeader;\n","import React, { useEffect } from \"react\";\nimport { fetchTableData } from \"../app/tableSlice\";\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\nimport TableColumn from \"./TableColumn\";\nimport TableRows from \"./ui/TableRows\";\nimport Pagination from \"./Pagination\";\nimport TableHeader from \"./TableHeader\";\n\nconst TableComponent: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentPage = useAppSelector((state) => state.table.currentPage);\n  const search = useAppSelector((state) => state.table.search);\n  const statusFilter = useAppSelector((state) => state.table.statusFilter);\n  const startDate = useAppSelector((state) => state.table.startDate);\n  const endDate = useAppSelector((state) => state.table.endDate);\n  useEffect(() => {\n    dispatch(\n      fetchTableData(currentPage, search, statusFilter, startDate, endDate)\n    );\n  }, [dispatch, currentPage, search, statusFilter, startDate, endDate]);\n\n  return (\n    <section className=\"d-flex flex-column mx-auto col-10 my-5\">\n      <TableHeader />\n      <table\n        className=\"table-hover border mt-3 mx-3\"\n        style={{ maxHeight: \"500px\", fontSize: \"0.85rem\" }}\n      >\n        <TableColumn />\n        <TableRows />\n      </table>\n      <Pagination />\n    </section>\n  );\n};\n\nexport default TableComponent;\n","import React from \"react\";\nimport \"./App.css\";\nimport TableComponent from \"./components/TableComponent\";\n\nfunction App() {\n  return <TableComponent />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nconst container = document.getElementById(\"root\")!;\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}